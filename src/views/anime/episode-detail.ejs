<!DOCTYPE html>
<html lang="en" class="dark">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= anime.name %> - <%= episode.title %></title>
    <link rel="shortcut icon" href="https://github.com/NakamaStream/Resources/blob/main/NakamStream-logo-HD-removebg.png?raw=true" type="image/x-icon">
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/src/public/css/anime-list.css">
    <link rel="stylesheet" href="/src/public/css/main-color/color.css">
    <link rel="stylesheet" href="/src/public/css/badges.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        .fade-in {
            animation: fadeIn 0.5s ease-out;
        }
        .video-container {
            position: relative;
            width: 100%;
            padding-top: 56.25%;
            border-radius: 15px;
            overflow: hidden;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }
        .video-container iframe {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            border: none;
        }
    </style>
</head>
<body class="bg-white dark:bg-white text-black dark:text-black transition-colors duration-300">
    <nav class="bg-white shadow-md">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div class="flex justify-between h-16">
            <div class="flex items-center">
              <div class="flex-shrink-0 flex items-center">
                <a href="/" class="flex flex-col items-center">
                  <span class="text-4xl font-bold text-primary">NakamaStream</span>
                  <span class="text-primary text-xs mt-0.5" style="line-height: 1;">By NakamaGroup</span>
                </a>
              </div>
              <div class="md:flex ml-6 space-x-8">
                <a href="/" class="border-orange-500 text-gray-900 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium">
                  Inicio
                </a>
                <a href="/news" class="border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium">
                  Noticias
                </a>
                <a href="/calendario" class="border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium">
                  Calendario
                </a>
              </div>
            </div>
            <div class="flex items-center">
              <div class="relative md:block">
              </div>
              <a href="/animes/api/saved-animes" class="ml-3">
                <button class="bg-white p-2 rounded-full text-gray-400 hover:text-primary hover:text-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500 transition duration-150 ease-in-out">
                  <span class="sr-only">Ver marcadores</span>
                  <svg class="h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z" />
                  </svg>  
                </button>
              </a>                                    
              <div class="ml-3 relative">
                <button id="user-menu-button" class="bg-white rounded-full flex text-sm focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500" aria-haspopup="true" aria-expanded="true">
                  <span class="sr-only">Abrir menú de usuario</span>
                  <img src="<%= user.profile_image_url || 'https://avatars.githubusercontent.com/u/168317328?s=200&v=4' %>" alt="User Avatar" class="h-8 w-8 rounded-full">
                </button>
              
                <!-- Menú desplegable -->
                <div id="user-menu" class="absolute right-0 z-10 mt-2 w-48 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 hidden transition-all duration-200 transform opacity-0 scale-95" role="menu" aria-orientation="vertical" aria-labelledby="user-menu-button">
                  <div class="py-1" role="none">
                    <p class="block px-4 py-2 text-sm text-gray-700"><%= user.username %></p>
                    <div class="border-b border-gray-200"></div>
                    <a href="/profile" class="user-menu-link flex items-center px-4 py-2 text-sm text-gray-700" role="menuitem">
                      <i class="fas fa-user mr-2"></i> Perfil
                    </a>
                    <a href="/animes/api/saved-animes" class="user-menu-link flex items-center px-4 py-2 text-sm text-gray-700" role="menuitem">
                      <i class="fa-solid fa-bookmark mr-2"></i> Guardados
                    </a>
                    <a href="/profile" class="user-menu-link flex items-center px-4 py-2 text-sm text-gray-700" role="menuitem">
                      <i class="fa-solid fa-star mr-2"></i> Favoritos
                    </a>
                    <% if (isAdmin) { %>
                      <div class="border-t mt-2"></div> <!-- Separador opcional -->
                      <a href="/admin/panel" class="user-menu-link flex items-center px-4 py-2 text-sm text-gray-700" role="menuitem">
                        <i class="fa-solid fa-lock mr-2"></i> Panel de Admin
                      </a>
                      <a href="/anime/upload" class="user-menu-link flex items-center px-4 py-2 text-sm text-gray-700" role="menuitem">
                        <i class="fa-solid fa-upload mr-2"></i> Subir Anime
                      </a>
                      <a href="/admin/animes/featured" class="user-menu-link flex items-center px-4 py-2 text-sm text-gray-700" role="menuitem">
                        <i class="fa-solid fa-star mr-2"></i> Subir Anime Destacado
                      </a>
                    <% } %>
                    <a href="/logout" class="user-menu-link flex items-center px-4 py-2 text-sm text-gray-700" role="menuitem">
                      <i class="fas fa-sign-out-alt mr-2"></i> Cerrar sesión
                    </a>                    
                  </div>
                </div>
              </div>                          
            </div>
          </div>
        </div>
      </nav>

    <main class="container mx-auto px-4 py-8 flex flex-col md:flex-row">
        <aside class="w-full md:w-1/4 pr-4 mb-8 md:mb-0">
            <h3 class="text-xl font-semibold anime-title mb-4">Próximos episodios</h3>
            <ul class="space-y-2">
            <% nextEpisodes.forEach(nextEpisode => { %>
                <li>
                <a href="/anime/<%= anime.slug %>/episode/<%= nextEpisode.episode_number %>" class="nextEpisode">
                    Episodio <%= nextEpisode.episode_number %>: <%= nextEpisode.title %>
                </a>
                </li>
            <% }) %>
            </ul>
        </aside>

        <div class="w-full md:w-3/4">
            <header class="mb-8 text-center">
                <h1 class="text-4xl font-extrabold anime-title mb-2"><%= anime.name %></h1>
                <h2 class="text-2xl font-semibold anime-title"><%= episode.title %></h2>
            </header>

            <section class="w-full max-w-4xl mx-auto mb-8">
                <div class="video-container">
                    <iframe src="<%= episode.video_url %>" allowfullscreen></iframe>
                </div>
            </section>

            <section class="max-w-4xl mx-auto mb-8 bg-white rounded-lg shadow-md p-6 transition-colors duration-300">
                <h3 class="text-xl font-semibold anime-title mb-4">Episode Description</h3>
                <p class="text-gray-700"><%= episode.description || 'No description available.' %></p>
            </section>

            <section class="max-w-4xl mx-auto mb-8 bg-white rounded-lg shadow-md p-6 transition-colors duration-300">
                <h3 class="text-xl font-semibold anime-title mb-4">Comentarios</h3>

                <!-- TEMP -->
                <p class="mt-4 text-sm text-gray-500">
                    <strong>Nota:</strong> La función de añadir fotos por URL está disponible solo en el chat global del anime, no en los comentarios de este episodio.
                </p>

                <% if (typeof user !== 'undefined' && user) { %>
                <form id="comment-form" class="mb-4">
                    <textarea id="comment-content" class="w-full p-2 border rounded" rows="4" placeholder="Escribe tu comentario..."></textarea>
                    <p id="comment-error" class="text-red-500 mt-2 hidden"></p>
                    <button type="submit" id="submit-comment" class="mt-2 bg-white text-[#ff6b6b] border-2 border-[#ff6b6b] px-4 py-2 rounded transition-all duration-300 hover:bg-[#ff6b6b] hover:text-white hover:scale-105">
                        Enviar
                    </button>                    
                </form>
                <% } else { %>
                <p class="mb-4 text-gray-600">Debes <a href="/login" class="text-blue-500 hover:underline">iniciar sesión</a> para comentar.</p>
                <% } %>
                <div id="comments-list" class="space-y-4">
                    <!-- Aquí se cargarán los comentarios -->
                </div>
            </section>

            <footer class="flex flex-col sm:flex-row justify-between max-w-4xl mx-auto space-y-4 sm:space-y-0">
                <a href="/anime/<%= anime.slug %>" class="bg-gray-ff6b6b hover:bg-gray-e55b5b text-white font-bold py-2 px-4 rounded transition duration-300 text-center">
                    Volver a Detalles del anime
                </a>           
                <% if (typeof user !== 'undefined' && user && user.isAdmin) { %>
                    <a href="/anime/<%= anime.slug %>/upload-episode" class="bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded transition duration-300 text-center">
                        Subir nuevo episodio
                    </a>
                <% } %>
            </footer>
        </div>
    </main>

    <!-- Modal para la información del usuario -->
    <div id="userModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
        <div class="bg-white p-6 rounded-lg shadow-xl max-w-md w-full">
            <div class="flex items-center mb-4">
                <img id="modalUserImage" src="" alt="" class="w-16 h-16 rounded-full mr-4">
                <div>
                    <h2 id="modalUsername" class="text-2xl font-bold"></h2>
                    <p id="modalUserEmail" class="text-gray-600"></p>
                </div>
            </div>
            <p id="modalUserBio" class="mb-4"></p>
            <button class="bg-indigo-600 text-white px-4 py-2 rounded hover:bg-indigo-700" onclick="closeUserModal()">Close</button>
        </div>
    </div>

    <script src="/src/public/js/anime/profile-anime-menu.js"></script>
    <script>
    document.addEventListener("DOMContentLoaded", function() {
        const commentForm = document.getElementById("comment-form");
        const commentContent = document.getElementById("comment-content");
        const commentsList = document.getElementById("comments-list");
        const submitButton = document.getElementById("submit-comment");
        const commentError = document.getElementById("comment-error");

        let lastCommentTime = 0;
        const cooldownPeriod = 30000; // 30 seconds cooldown

        function loadComments() {
            console.log("Fetching comments...");
            fetch(`/anime/<%= anime.slug %>/episode/<%= episode.episode_number %>/comments`)
                .then(response => response.json())
                .then(comments => {
                    console.log("Received comments:", comments);
                    commentsList.innerHTML = comments.map(comment => `
                        <div class="bg-gray-50 p-4 rounded-lg shadow fade-in">
                            <div class="flex items-center mb-2">
                                <img src="${comment.profile_image_url || 'https://avatars.githubusercontent.com/u/168317328?s=200&v=4'}" alt="${comment.username}" class="w-10 h-10 rounded-full mr-3 cursor-pointer" onclick="window.showUserModal('${comment.username}')">
                                <div>
                                    <a href="/profile/${comment.username}" class="font-bold text-ff6b6b hover:underline">${comment.username}</a>
                                    ${comment.is_admin ? '<span class="admin-badge ml-2">Admin</span>' : '<span class="member-badge ml-2">Miembro</span>'}
                                    <p class="text-sm text-gray-500">${formatDate(comment.created_at)}</p>
                                </div>
                            </div>
                            <p class="mt-2 text-gray-700">${comment.content}</p>
                        </div>
                    `).join('');
                })
                .catch(error => {
                    console.error("Error fetching comments:", error);
                });
        }

        function formatDate(dateString) {
            const options = { 
                year: 'numeric', 
                month: 'long', 
                day: 'numeric', 
                hour: '2-digit', 
                minute: '2-digit', 
                hour12: true 
            };
            return new Date(dateString).toLocaleString('en-US', options);
        }

        function checkCooldown() {
            const now = Date.now();
            const timeElapsed = now - lastCommentTime;
            return timeElapsed >= cooldownPeriod;
        }

        function updateCooldownUI(remainingTime) {
            submitButton.disabled = true;
            submitButton.classList.add('opacity-50', 'cursor-not-allowed');
            commentError.textContent = `Por favor espera ${Math.ceil(remainingTime / 1000)} segundos antes de comentar de nuevo.`;
            commentError.classList.remove('hidden');
        }

        function resetCooldownUI() {
            submitButton.disabled = false;
            submitButton.classList.remove('opacity-50', 'cursor-not-allowed');
            commentError.classList.add('hidden');
        }

        if (commentForm) {
            commentForm.addEventListener("submit", function(event) {
                event.preventDefault();

                if (!checkCooldown()) {
                    const remainingTime = cooldownPeriod - (Date.now() - lastCommentTime);
                    updateCooldownUI(remainingTime);
                    return;
                }

                const content = commentContent.value.trim();
                if (content === '') {
                    commentError.textContent = 'El comentario no puede estar vacío.';
                    commentError.classList.remove('hidden');
                    return;
                }

                fetch(`/anime/<%= anime.slug %>/episode/<%= episode.episode_number %>/comment`, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ content: content })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        commentContent.value = "";
                        loadComments();
                        lastCommentTime = Date.now();
                        updateCooldownUI(cooldownPeriod);
                        setTimeout(resetCooldownUI, cooldownPeriod);
                    } else {
                        commentError.textContent = "Error al enviar comentario";
                        commentError.classList.remove('hidden');
                    }
                });
            });
        }

        // Make showUserModal globally accessible
        window.showUserModal = function(username) {
            fetch(`/api/user/${username}`)
                .then(response => response.json())
                .then(user => {
                    document.getElementById('modalUserImage').src = user.profile_image_url || 'https://avatars.githubusercontent.com/u/168317328?s=200&v=4';
                    document.getElementById('modalUsername').textContent = user.username;
                    document.getElementById('modalUserEmail').textContent = user.email;
                    document.getElementById('modalUserBio').textContent = user.bio || 'No bio available';
                    document.getElementById('userModal').classList.remove('hidden');
                });
        }

        window.closeUserModal = function() {
            document.getElementById('userModal').classList.add('hidden');
        }

        loadComments();
    });
    </script>
</body>
</html>
